{"version":3,"sources":["OverPanel.ts"],"names":[],"mappings":";;;;;AAAA,gCAA+B;AAEzB,IAAA,kBAAkC,EAAjC,oBAAO,EAAC,sBAAQ,CAAkB;AAGzC;IAA+B,6BAAY;IAD3C;QAAA,qEAiCC;QA7BW,iBAAW,GAAa,IAAI,CAAC;;IA6BzC,CAAC;IA3BU,wBAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,OAAO,GAAG,KAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAA,CAAC;YAClB,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;gBACX,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC;QACD,KAAK,CAAC,IAAI,CAAC,UAAC,EAAE,EAAC,EAAE;YACb,EAAE,CAAA,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,CAAC,CAAC,CAAA;YACb,CAAC;YAAA,IAAI,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC,CAAC;YACb,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;QAC7B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAO,CAAC,cAAI,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,eAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,cAAI,IAAM,CAAC;QACtF,CAAC;IACL,CAAC;IAEM,wBAAI,GAAX;QACI,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC7B,CAAC;IACL,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;kDACkB;IAH5B,SAAS;QADrB,OAAO;OACK,SAAS,CAgCrB;IAAD,gBAAC;CAhCD,AAgCC,CAhC8B,EAAE,CAAC,SAAS,GAgC1C;AAhCY,8BAAS","file":"","sourceRoot":"../../../../../../../assets/src/components/room/over","sourcesContent":["import { G } from \"../../../G\";\n\nconst {ccclass,property} = cc._decorator;\n\n@ccclass\nexport class OverPanel extends cc.Component {\n\n    @property(cc.Label)\n    private resultLabel: cc.Label = null;\n\n    public show() {\n        this.node.active = true;\n        let users = [];\n        let seatMap = G.room.getSeatMap();\n        for(let i in seatMap){\n            if(seatMap[i]){\n                users.push(seatMap[i]);\n            }\n        }\n        users.sort((u1,u2)=>{\n            if(u1.score >= u2.score) {\n                return -1\n            }else {\n                return 1;\n            }\n        });\n        this.resultLabel.string = \"\";\n        for(let i = 0; i < users.length; i++) {\n            this.resultLabel.string += `${i}【${users[i].username}】 ${users[i].score}分${\"\\n\"}`;\n        }\n    }\n\n    public hide() {\n        if(this.node.active) {\n            this.node.active = false;\n        }\n    }\n}"]}